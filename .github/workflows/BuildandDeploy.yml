name: Build and Deploy
on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Select the environment
        required: true
        options:
          - Dev
          - Staging
          - Production
env:
  commit_sha: ${{github.event.client_payload.commit_sha}}
jobs:
  build:
    runs-on: ubuntu-20.04
    environment: ${{ github.event.inputs.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      
      - name: Restore & Build .Net Core solution
        run: |
          dotnet build source/DevSecOpsOne.Api/DevSecOpsOne.Api.csproj 

      - name: Transform Configuration Vars
        id: set-vars
        run: |
          current_branch="${GITHUB_REF#refs/heads/}"
          aws_region="ap-southeast-1"
          environment="${{ github.event.inputs.environment }}"
          app_setting_env="Development"
          docker_file_path=""
          service_name="DevSecOpsOne"
          accessKey="${{ secrets.DEV_AWS_ACCESS_KEY }}"
          secretKey="${{ secrets.DEV_AWS_SECRET_KEY }}"
          commitSha="${{env.commit_sha}}"

          echo "access_key=${accessKey}" >> $GITHUB_OUTPUT
          echo "secret_key=${secretKey}" >> $GITHUB_OUTPUT
          echo "aws_region=${aws_region}" >> $GITHUB_OUTPUT
          echo "environment=${environment}" >> $GITHUB_OUTPUT
          echo "app_setting_env=${app_setting_env}" >> $GITHUB_OUTPUT
          echo "current_branch=${current_branch}" >> $GITHUB_OUTPUT
          echo "service_name=${service_name}" >> $GITHUB_OUTPUT

      - name: Setup AWS Creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ steps.set-vars.outputs.access_key }}
          aws-secret-access-key: ${{ steps.set-vars.outputs.secret_key }}
          aws-region: ${{ steps.set-vars.outputs.aws_region }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # Build and push Docker images         
      - name: Build, tag, and push DevSecOpsOne image to Amazon ECR
        id: buildImageDevSecOpsOne
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ env.commit_sha }}
        run: |
          # Build a docker container and push it to ECR so that it can be deployed to ECS.
          cd source/DevSecOpsOne.Api
          ECR_REPOSITORY="devsecopsone-api" 
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:Latest .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY --all-tags
          echo "::set-output name=imageDigestDevSecOpsOne::$IMAGE_TAG"